version: "3"
services:
  # traefik:
  #   image: "traefik:latest"
  #   container_name: "traefik"
  #   command:
  #     #- "--log.level=DEBUG"
  #     - "--api.insecure=true"
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entrypoints.web.address=:80"
  #   ports:
  #     - "80:80"
  #     - "8080:8080"
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fastapi
    volumes:
      - db:/var/lib/postgresql/data
    # networks:      
    #   - traefik-public
  dbtest:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fastapi_test
    # networks:      
    #   - traefik-public
  app:
    build: .
    container_name: fastapi-server
    command: uvicorn src.main:app --host 0.0.0.0 --port 80 --reload
    labels:
      - "traefik.enable=true"      
      - "traefik.http.services.app.loadbalancer.server.port=80"
      - "traefik.http.routers.app-http.entrypoints=web"
      - "traefik.http.routers.app-http.rule=Host(`docker-fastapi.stegul.xyz`)"
      - "traefik.docker.network=traefik-public"
    networks:      
      - traefik-public
    depends_on:
      - db
      - dbtest
    environment:
      NODE_ENV: development
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: fastapi
      SECRET_KEY: c0f1cd4babc2eecd335c47a0c137f9fa61986710aa4ad70e8dab6f4945af2ac2
    links:
      - db
    volumes:
      - .:/code

volumes:
  db:
    driver: local

networks:
  traefik-public:
    external: true